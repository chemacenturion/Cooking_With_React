{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","cookTime","servings","instructions","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","type","onChange","e","target","value","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","htmlFor","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","selectedRecipeId","setSelectedRecipeId","setRecipes","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","r","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36313b3d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Ingredient({ name, amount }) {\r\n  return (\r\n    <>\r\n      <span>{name}</span>\r\n      <span>{amount}</span>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport Ingredient from './Ingredient'\r\n\r\nexport default function IngredientList({ ingredients}) {\r\n  const ingredientElements = ingredients.map(ingredient => {\r\n    return <Ingredient key={ingredient.id} {...ingredient} />\r\n  })\r\n  return (\r\n    <div className=\"ingredient-grid\">\r\n      {ingredientElements}\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport IngredientList from './IngredientList';\r\nimport { RecipeContext } from './App'\r\n\r\nexport default function Recipe(props) {\r\n  const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext)\r\n  const {\r\n    id,\r\n    name,\r\n    cookTime,\r\n    servings,\r\n    instructions,\r\n    ingredients\r\n  } = props\r\n  return (\r\n    <div className=\"recipe\">\r\n      <div className=\"recipe__header\">\r\n        <h3 className=\"recipe__title\">{name}</h3>\r\n        <div>\r\n          <button\r\n            className=\"btn btn--primary mr-1\"\r\n            onClick={() => handleRecipeSelect(id)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn--danger\"\r\n            onClick={() => handleRecipeDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Cook Time:</span>\r\n        <span className=\"recipe__value\">{cookTime}</span>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Servings:</span>\r\n        <span className=\"recipe__value\">{servings}</span>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Instructions:</span>\r\n        <div className=\"recipe__value recipe__instructions recipe__value--indented\">{instructions}</div>\r\n      </div>\r\n      <div className=\"recipe__row\">\r\n        <span className=\"recipe__label\">Ingredients:</span>\r\n        <div className=\"recipe__value recipe__value--indented\">\r\n          <IngredientList ingredients={ingredients} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport Recipe from './Recipe'\r\nimport { RecipeContext } from './App'\r\n\r\nexport default function RecipeList({ recipes }) {\r\n  const { handleRecipeAdd } = useContext(RecipeContext)\r\n\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      <div>\r\n        {recipes.map(recipe => {\r\n          return (\r\n            <Recipe key={recipe.id} {...recipe} />\r\n          )\r\n        })}\r\n      </div>\r\n      <div className=\"recipe-list__add-recipe-btn-container\">\r\n        <button\r\n          className=\"btn btn--primary\"\r\n          onClick={handleRecipeAdd}\r\n        >\r\n          Add Recipe\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function RecipeIngredientEdit(props) {\r\n  const {\r\n    ingredient,\r\n    handleIngredientChange,\r\n    handleIngredientDelete\r\n  } = props\r\n\r\n  function handleChange(changes) {\r\n    handleIngredientChange(ingredient.id, { ...ingredient, ...changes })\r\n  }\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"recipe-edit__input\"\r\n        type=\"text\"\r\n        onChange={(e) => handleChange({ name: e.target.value })}\r\n        value={ingredient.name}\r\n      />\r\n      <input\r\n        className=\"recipe-edit__input\"\r\n        type=\"text\"\r\n        onChange={(e) => handleChange({ amount: e.target.value })}\r\n        value={ingredient.amount}\r\n      />\r\n      <button\r\n        className=\"btn btn--danger\"\r\n        onClick={() => handleIngredientDelete(ingredient.id)}\r\n      >\r\n        &times;\r\n      </button>\r\n    </>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport RecipeIngredientEdit from './RecipeIngredientEdit'\r\nimport { RecipeContext } from './App'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function RecipeEdit({ recipe }) {\r\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext)\r\n\r\n  function handleChange(changes) {\r\n    handleRecipeChange(recipe.id, { ...recipe, ...changes })\r\n  }\r\n\r\n  function handleIngredientChange(id, ingredient) {\r\n    const newIngredients = [...recipe.ingredients]\r\n    const index = newIngredients.findIndex(i => i.id === id)\r\n    newIngredients[index] = ingredient\r\n    handleChange({ ingredients: newIngredients })\r\n  }\r\n\r\n  function handleIngredientAdd() {\r\n    const newIngredient = {\r\n      id: uuidv4(),\r\n      name: '',\r\n      amount: ''\r\n    }\r\n    handleChange({ ingredients: [...recipe.ingredients, newIngredient] })\r\n  }\r\n\r\n  function handleIngredientDelete(id) {\r\n    handleChange({\r\n      ingredients: recipe.ingredients.filter(i => i.id !== id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipe-edit\">\r\n      <div className=\"recipe-edit__remove-button-container\">\r\n        <button\r\n          className=\"btn recipe-edit__remove-button\"\r\n          onClick={() => handleRecipeSelect(undefined)}\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n      <div className=\"recipe-edit__details-grid\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className=\"recipe-edit__label\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={recipe.name}\r\n          onChange={e => handleChange({ name: e.target.value })}\r\n          className=\"recipe-edit__input\" />\r\n        <label\r\n          htmlFor=\"cookTime\"\r\n          className=\"recipe-edit__label\">\r\n          Cook Time\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"cookTime\"\r\n          id=\"cookTime\"\r\n          value={recipe.cookTime}\r\n          onChange={e => handleChange({ cookTime: e.target.value })}\r\n          className=\"recipe-edit__input\" />\r\n        <label\r\n          htmlFor=\"servings\"\r\n          className=\"recipe-edit__label\">\r\n          Servings\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          name=\"servings\"\r\n          id=\"servings\"\r\n          value={recipe.servings}\r\n          onChange={e => handleChange({ servings: parseInt(e.target.value) || '' })}\r\n          className=\"recipe-edit__input\" />\r\n        <label\r\n          htmlFor=\"instructions\"\r\n          className=\"recipe-edit__label\">\r\n          Instructions\r\n        </label>\r\n        <textarea\r\n          name=\"instructions\"\r\n          className=\"recipe-edit__input\"\r\n          onChange={e => handleChange({ instructions: e.target.value })}\r\n          value={recipe.instructions}\r\n          id=\"instructions\" /> \r\n      </div>\r\n      <br />\r\n      <label className=\"recipe-edit__label\">Ingredients</label>\r\n      <div className=\"recipe-edit__ingredient-grid\">\r\n        <div>Name</div>\r\n        <div>Amount</div>\r\n        <div></div>\r\n        {recipe.ingredients.map(ingredient => (\r\n          <RecipeIngredientEdit\r\n            key={ingredient.id}\r\n            handleIngredientChange={handleIngredientChange}\r\n            handleIngredientDelete={handleIngredientDelete}\r\n            ingredient={ingredient}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\r\n        <button\r\n          className=\"btn btn--primary\"\r\n          onClick={() => handleIngredientAdd()}\r\n        >\r\n          Add Ingredient\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport RecipeList from './RecipeList'\r\nimport '../css/app.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport RecipeEdit from './RecipeEdit';\r\n\r\nexport const RecipeContext = React.createContext()\r\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\r\n\r\nfunction App() {\r\n  const [selectedRecipeId, setSelectedRecipeId] = useState()\r\n  const [recipes, setRecipes] = useState(sampleRecipes)\r\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\r\n  \r\n  useEffect(() => {\r\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n    if (recipeJSON != null) setRecipes(JSON.parse(recipeJSON))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\r\n  }, [recipes])\r\n\r\n  const recipeContextValue = {\r\n    handleRecipeAdd,\r\n    handleRecipeDelete,\r\n    handleRecipeSelect,\r\n    handleRecipeChange\r\n  }\r\n\r\n  function handleRecipeSelect(id) {\r\n    setSelectedRecipeId(id)\r\n  }\r\n\r\n  function handleRecipeAdd() {\r\n    const newRecipe = {\r\n      id: uuidv4(),\r\n      name: '',\r\n      servings: 1,\r\n      cookTime: '',\r\n      instructions: '',\r\n      ingredients: [\r\n        { id: uuidv4(), name: '', amount: '' }\r\n      ]\r\n    }\r\n\r\n    setSelectedRecipeId(newRecipe.id)\r\n    setRecipes([...recipes, newRecipe])\r\n  }\r\n\r\n  function handleRecipeChange(id, recipe) {\r\n    const newRecipes = [...recipes]\r\n    const index = newRecipes.findIndex(r => r.id === id)\r\n    newRecipes[index] = recipe\r\n    setRecipes(newRecipes)\r\n  }\r\n\r\n  function handleRecipeDelete(id) {\r\n    if (selectedRecipeId != null && selectedRecipeId === id) {\r\n      setSelectedRecipeId(undefined)\r\n    }\r\n    setRecipes(recipes.filter(recipe => recipe.id !== id))\r\n  }\r\n\r\n  return (\r\n    <RecipeContext.Provider value={recipeContextValue}>\r\n      <RecipeList recipes={recipes} />\r\n      {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\r\n    </RecipeContext.Provider>\r\n  )\r\n}\r\n\r\nconst sampleRecipes = [\r\n  {\r\n    id: 1,\r\n    name: 'Plain Chicken',\r\n    servings: 3,\r\n    cookTime: '1:45',\r\n    instructions: \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\r\n    ingredients: [\r\n      {\r\n        id: 1,\r\n        name: 'Chicken',\r\n        amount: '2 Pounds'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Salt',\r\n        amount: '1 Tbs'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Plain Pork',\r\n    servings: 5,\r\n    cookTime: '0:45',\r\n    instructions: \"1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork\",\r\n    ingredients: [\r\n      {\r\n        id: 1,\r\n        name: 'Pork',\r\n        amount: '3 Pounds'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Paprika',\r\n        amount: '2 Tbs'\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}